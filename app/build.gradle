plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'dagger.hilt.android.plugin'
    id 'org.jetbrains.kotlin.kapt'
    id 'kotlin-parcelize'
    id 'com.google.devtools.ksp'
}

android {
    namespace 'ai.ivira.app'
    compileSdk 34

    defaultConfig {
        applicationId "ai.ivira.app"
        minSdk 21
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    signingConfigs {
        debug {
            File props = file(".signing-debug/signing.properties")
            File keystore = file(".signing-debug/debug.jks")
            if (props.exists()) {
                def signing = new Properties()
                props.withInputStream { signing.load(it) }
                if (signing.KEYSTORE_PASSWORD)
                    storePassword signing.getProperty('KEYSTORE_PASSWORD')
                if (signing.KEY_PASSWORD)
                    keyPassword signing.getProperty('KEY_PASSWORD')
                if (signing.KEY_ALIAS)
                    keyAlias signing.getProperty('KEY_ALIAS')
            }
            if (keystore.exists())
                storeFile keystore
        }
        release {
            File props = file(".signing/signing.properties")
            File keystore = file(".signing/release.jks")
            if (props.exists()) {
                def signing = new Properties()
                props.withInputStream { signing.load(it) }
                if (signing.KEYSTORE_PASSWORD)
                    storePassword signing.getProperty('KEYSTORE_PASSWORD')
                if (signing.KEY_PASSWORD)
                    keyPassword signing.getProperty('KEY_PASSWORD')
                if (signing.KEY_ALIAS)
                    keyAlias signing.getProperty('KEY_ALIAS')
            }
            if (keystore.exists())
                storeFile keystore
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            shrinkResources false
            signingConfig signingConfigs.debug
        }
        release {
            minifyEnabled true
            shrinkResources true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        freeCompilerArgs += "-opt-in=androidx.compose.material.ExperimentalMaterialApi"
        freeCompilerArgs += "-opt-in=com.google.accompanist.navigation.material.ExperimentalMaterialNavigationApi"
        freeCompilerArgs += "-opt-in=androidx.compose.animation.ExperimentalAnimationApi"
        freeCompilerArgs += "-opt-in=androidx.compose.foundation.ExperimentalFoundationApi"
        jvmTarget = '17'
    }
    buildFeatures {
        compose true
    }
    flavorDimensions "base"
    productFlavors {
        dev {
            applicationIdSuffix ".dev"
            dimension "base"
        }

        prod {
            dimension "base"
        }
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.5.2'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }

    applicationVariants.all { variant ->
        tasks.named("assemble${variant.name.capitalize()}") {
            it.dependsOn("detekt${variant.name.capitalize()}")
        }
        tasks.named("detekt${variant.name.capitalize()}") {
            it.mustRunAfter("compile${variant.name.capitalize()}Kotlin")
        }
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.10.1'
    implementation "androidx.core:core-splashscreen:1.0.1"

    // lifecycle
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.6.2"
    implementation "androidx.lifecycle:lifecycle-runtime-compose:2.6.2"
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:2.6.2"
    implementation "androidx.lifecycle:lifecycle-process:2.6.2"

    // compose
    implementation 'androidx.activity:activity-compose:1.7.2'
    implementation 'androidx.compose.ui:ui:1.5.0'
    implementation 'androidx.compose.ui:ui-graphics:1.5.0'
    implementation 'androidx.compose.ui:ui-tooling-preview:1.5.0'
    implementation "androidx.compose.foundation:foundation:1.5.0"
    implementation 'androidx.compose.material:material:1.5.0'
    implementation "androidx.compose.runtime:runtime:1.5.0"
    debugImplementation 'androidx.compose.ui:ui-tooling:1.5.0'
    debugImplementation 'androidx.compose.ui:ui-test-manifest:1.5.0'
    implementation "androidx.compose.compiler:compiler:1.5.2"

    // accompanist
    implementation "com.google.accompanist:accompanist-navigation-material:0.32.0"
    implementation "com.google.accompanist:accompanist-permissions:0.32.0"


    // pager and indicators -accompanist
    implementation "com.google.accompanist:accompanist-pager:0.32.0"
    implementation "com.google.accompanist:accompanist-pager-indicators:0.32.0"

    //dataStore Preferences
    implementation "androidx.datastore:datastore-preferences:1.0.0"

    // hilt
    implementation "com.google.dagger:hilt-android:2.48"
    kapt "com.google.dagger:hilt-android-compiler:2.48"
    implementation "androidx.hilt:hilt-navigation-compose:1.0.0"

    // coroutine
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.7.3"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.3"

    // Room
    implementation 'androidx.room:room-runtime:2.6.0-beta01'
    ksp 'androidx.room:room-compiler:2.6.0-beta01'
    implementation 'androidx.room:room-ktx:2.6.0-beta01'

    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.okhttp3:okhttp:4.11.0'
    implementation 'com.squareup.retrofit2:converter-moshi:2.9.0'
    implementation 'com.squareup.retrofit2:converter-scalars:2.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.11.0'

    // Moshi Kotlin
    ksp 'com.squareup.moshi:moshi-kotlin-codegen:1.15.0'
    implementation 'com.squareup.moshi:moshi:1.15.0'

    // Util
    implementation 'com.jakewharton.timber:timber:5.0.1'

    // Date
    implementation 'com.github.samanzamani:PersianDate:1.6.1'

    //iText for pdf
    implementation 'com.itextpdf:itextpdf:5.5.13.1'
    implementation "com.airbnb.android:lottie-compose:6.1.0"

    implementation 'pl.droidsonroids.gif:android-gif-drawable:1.2.27'

}